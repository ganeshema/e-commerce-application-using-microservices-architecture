
services:
  postgres:  # PostgreSQL database service
    image: postgres  # Official PostgreSQL image (version 15)
    container_name: postgres_sql  # Custom container name for PostgreSQL
    ports:
      - "5430:5432"  # Map host port 5430 to container's port 5432
    environment:  # Database configuration
      POSTGRES_USER: root  # Default PostgreSQL user
      POSTGRES_PASSWORD: mypassword  # Password for the PostgreSQL user
      PGDATA: /var/lib/postgresql/data  # Location for persistent data
    volumes:
      - postgres:/var/lib/postgresql/data  # Store database data persistently
    restart: unless-stopped  # Restart container unless explicitly stopped
    networks:
      - microservices-net  # Connect to the shared network

  mongodb:  # MongoDB database service
    image: mongo  # Official MongoDB image
    container_name: mongo_db  # Custom container name for MongoDB
    ports:
      - "27017:27017"  # Expose MongoDB on port 27017
    environment:  # MongoDB configuration
      MONGO_INITDB_ROOT_USERNAME: root  # Admin username
      MONGO_INITDB_ROOT_PASSWORD: mypassword  # Admin password
    volumes:
      - mongodb_data:/data/db  # Persistent storage for database data
    restart: unless-stopped  # Restart container unless explicitly stopped
    networks:
      - microservices-net  # Shared network for services

  mongo-express:  # MongoDB web interface service
    image: mongo-express  # Official Mongo Express image
    container_name: mongo_express  # Custom container name for Mongo Express
    ports:
      - "8081:8081"  # Expose Mongo Express on port 8081
    environment:  # Mongo Express configuration
      ME_CONFIG_MONGODB_ADMINUSERNAME: root  # Admin username (matches MongoDB)
      ME_CONFIG_MONGODB_ADMINPASSWORD: mypassword  # Admin password (matches MongoDB)
      ME_CONFIG_MONGODB_SERVER: mongodb  # Hostname of MongoDB service
    restart: always  # Restart container always
    networks:
      - microservices-net  # Shared network for services

  mail-dev:  # SMTP service for dev environment
    image: maildev/maildev  # MailDev image for email testing
    container_name: mail_dev  # Custom container name for mail service
    ports:
      - "1080:1080"  # Expose Web UI port
      - "1025:1025"  # Expose SMTP port
    restart: unless-stopped  # Restart container unless explicitly stopped
    networks:
      - microservices-net  # Shared network for services

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181" # Expose Zookeeper on port 2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181 # Client port for Zookeeper
      ZOOKEEPER_TICK_TIME: 2000 # Tick time for Zookeeper
    networks:
      - microservices-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092" # Kafka broker port
    environment:
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181 # Connect Kafka to Zookeeper
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092 # Kafka advertised address
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092 # Kafka listener address
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1 # Replication factor for internal topics
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST:PLAINTEXT
    networks:
      - microservices-net

    depends_on:
      - zookeeper # Kafka depends on Zookeeper


networks:
  microservices-net:  # Shared bridge network for services
    driver: bridge

volumes:
  postgres:  # Persistent volume for PostgreSQL data
  mongodb_data:  # Persistent volume for MongoDB data
